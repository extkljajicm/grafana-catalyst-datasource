name: Release

on:
  push:
    tags:
      - 'v*' # Run workflow on version tags, e.g. v1.0.4

permissions: read-all

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      # Set build-time version from the git tag.
      # We always set package.json's version (webpack substitutes %VERSION% into dist/plugin.json).
      # If plugin.json exists at repo root, we also set info.version for consistency (optional).
      - name: Set build version from Git tag
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash
        run: |
          set -euo pipefail
          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "Using tag version: $VERSION"

          # Drives webpack %VERSION% substitution
          npm version --no-git-tag-version "$VERSION"

          # Optional: update plugin.json if present
          if [ -f plugin.json ]; then
            sudo apt-get update -y && sudo apt-get install -y jq
            jq --arg v "$VERSION" '.info.version=$v' plugin.json > plugin.json.tmp && mv plugin.json.tmp plugin.json
          else
            echo "plugin.json not found in repo root; relying on webpack %VERSION% substitution."
          fi

      - name: Build plugin
        uses: grafana/plugin-actions/build-plugin@main
        with:
          node-version: 22
          go-version: 1.21
          backend-target: buildAll
          attestation: false

      - name: Package plugin
        uses: grafana/plugin-actions/package-plugin@main
        with:
          node-version: 22
          go-version: 1.21
          backend-target: buildAll
